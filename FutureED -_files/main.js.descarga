(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/comments/main"],{

/***/ "./resources/js/comments/main.js":
/*!***************************************!*\
  !*** ./resources/js/comments/main.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Global variables
var content_id = "content_comments"; // Get elements

var form_element = document.getElementById("form-comment");
var btn_submit = document.getElementById("btn_submit");
var comment = document.getElementById("comment");
var content = document.getElementById(content_id); /// [ MAIN EVENT ]

window.onload = function () {
  reload_forms();
  reload_textareas();
  load_comments();
};

function reload_forms() {
  $('.form-comment').off('submit');
  $('.form-comment').on('submit', function (e) {
    // Disable button and submit
    e.preventDefault();
    disable_textareas();
    e.target.querySelector("button").disabled = true; // Submit data

    form_element = document.querySelector(".form-comment");
    form_url = form_element.getAttribute("action");
    $.ajax({
      url: form_url,
      type: 'post',
      // data: $("#form-comment").serialize(),
      data: $(e.target).serialize(),
      dataType: 'json',
      success: function success(_response) {
        comment.value = "";
        load_comments();
      },
      error: function error(_response) {
        console.log(_response);
      }
    });
  });
}

function reload_textareas() {
  $(".form-comment").on("input", function (e) {
    root = findAncestor(e.target, ".form-comment");
    text_area = root.querySelector("textarea");
    btn = root.querySelector("button");
    letters_limit = root.querySelector("span.letters");
    length_min = text_area.getAttribute("data-min");
    length_max = text_area.getAttribute("data-limit");
    length = text_area.value.length;
    letters_limit.innerHTML = length_max - length;

    if (length >= length_min && length <= length_max) {
      btn.disabled = false;
    } else {
      btn.disabled = true;
    }
  });
  $("textarea.comment, textarea.comment-comment").on("keypress", function (e) {
    text_area = e.target;
    length_max = text_area.getAttribute("data-limit");

    if (text_area.value.length >= length_max) {
      return false;
    }
  });
}

function disable_textareas() {
  $(".form-comment").off("input");
}

function ajaxLoad(filename, content) {
  content = typeof content !== 'undefined' ? content : 'content';
  $('.loading').show();
  $.ajax({
    type: "GET",
    url: filename,
    contentType: false,
    success: function success(data) {
      $("#" + content).html(data);
      $('.loading').hide();
      pagination_control();
      reload_forms();
      reload_textareas();
      set_extra_comments();
    },
    error: function error(xhr, status, _error) {
      console.log(xhr.responseText);
    }
  });
}

function pagination_control() {
  // Look for pagination items
  $('.page-item').click(function (e) {
    e.preventDefault();
    route = e.target.href;

    if (route) {
      ajaxLoad(route, content_id);
    }
  });
}

function load_comments() {
  route = content.getAttribute('data-route');
  ajaxLoad(route, content_id);
}

function set_extra_comments() {
  // Find add comments buttons
  comments_add = document.querySelectorAll(".comment_add");
  comments_add.forEach(function (comment_add) {
    comment_add.addEventListener("click", function () {
      hide_all_comment_sections();
      root = findAncestor(comment_add, ".row");
      comment_section = root.querySelector(".comment_section");
      comment_section.hidden = false;
    });
  });
}

function hide_all_comment_sections() {
  document.querySelectorAll(".comment_section").forEach(function (el) {
    el.hidden = true;
  });
}

function findAncestor(el, sel) {
  while ((el = el.parentElement) && !(el.matches || el.matchesSelector).call(el, sel)) {
    ;
  }

  return el;
}

/***/ }),

/***/ 27:
/*!*********************************************!*\
  !*** multi ./resources/js/comments/main.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/futureed/html/cuco/resources/js/comments/main.js */"./resources/js/comments/main.js");


/***/ })

},[[27,"/js/manifest"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,